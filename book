
p!
3.关于enum

2017.2.22

1.写wechat包括redis-object/enum
2.pundit用于权限认证
3.rescue from ActiveRecord::RecordInvalid => error

2017.2.23

1.如何正确的使用enum给model attributes属性分类。

2.什么是rest-client

3.使用Concerns

2017.2.24

1.ruby中的dig方法（还不是很明白）
2.redis中的五个类型(string,list,set,hash,sortedset)
3.粗略了解csv(roo/gem)
4.codeschool教程关于serializer/concerns

2017.2.26

1.12web教程
2.使用paperclip和simple_for/上传图片
3.使用一个新的gem/cocoon/ haml 写页面。
4. devise使用



2017.2.25

1.codeschool两个缓存(Etags, Dalli)
headers['Etag'] = Digest::MD5.hexdigest(body)
(stale?/fresh_when)
2.12 web apps in 12 weeks(blog)



2017.2.26

1.paperclip/simple_form
2.haml

2017.2.27

1.gem masonry-rails/acts_as_votable
2.解决关于server is already running. Check C:/Rails/tmp/pids/server.pid [closed]

2017.2.28

1.12 web 

2.jequry-raty(评论指数）

3.面试(路由不熟悉）


2017.3.1

1.手写路由熟悉

2.怎样实现category点击分类

= link_to category.name, xx_path(category: category.name)


2017.3.2

1.手动写登录注册功能

2. 用户的权限

3 12 web


2017.3.3

1.继续完成未完成功能，

2. error.save(validate: false)

3.理解current_user和correct_user区别

4.def right_user
   @user == current_user
    end

	2017.3.6

	1.实现用户的评论和权限

	2.自己感觉太笨了（怎么办？没有捷径可走）

	3.基础很重要

	2017.3.7

	1.添加搜索，分页功能

	2.解决No Ransack::Search object was provided to search_form_for
	   def set_search
	       @q = classname.search.params[:@q]
		     before_action :set_search

			 3. undefind total_pages kaminari
			 	page.(params[:page])

				2017.3.23

				1.修改国外服务器时间 tzselect/.bash_profile

				2. 从启 /etc/init.d/cron stop/start

				3. a foreign key constraint fails (`wiki`.`comments）dependent: :destroy

				2017.4.10

				1.学习关于Array api/ObjectBasic/
				2.怎样打开一个gem/gem unpack "xxx"
				3.markdown的使用/redcarpet/rouge.

				2017.4.10
				升级http->https
				1.sudo nginx -t/reload -b 配置/从载。
				2.vim 命令 $(移动行尾) w(移动下一个词), b(移动到上一个词)
				gg(跳到第一行), G(跳到最后一行)
				3.使用config.force_ssl = true
				4. 配置nginx.site-enabled/default
				5.source ~./.bashrc/. .bashrc 区别
				6.git push 失败 failed to push some refs to git(github中的README.md文件不在本地代码目录中, git pull --rebase origin master)

				2017.4.11
				1.创建响应式页面
				2.twitter-bootstrap-rails
				
				2017.4.12
				1.过滤敏感的信息 config.filter_logging += [:password, :password_confirmation]
				2.%button{ type="button", class: "close", 'data-dismiss' => "alert" } &times
				3.content_tag 用法，content_tag :div, xxx(value), :id => "xxx"(key)
				4.what's with_scope?(还不是很明白)

				2017.4.14
				1.stack trace(堆栈跟踪)
				2.模糊查询like
				3.Address already in use - bind(2) (Errno::EADDRINUSE)( lsof -wni tcp:3000 , kill -9 pid)
				4.pluralize(xxx, 'xx')

				2017.4.15
				1.group_by/in_groups_for方法

				2017.4.16
				1.errors.add(attributes, message)
			    2.time.format(:long/db...)/strftime
				3.define_method(:xxx)


				时刻保持一颗用于学习的心，然后你需要：

				分清事情重要或不重要，紧急或不紧急；
				适当的时候要学会“拒绝”需求，或推迟；
				不要顺着需求方的需求、思路来解决问题，要跳出来看；
				尝试用简单的方式解决问题；
				整理自己的一套最佳实践，反复应用、验证、并改进；
				参考、借鉴、学习他人的实践方式；

				2017.4.16

				1.escape_javascript(javascript)/j 用法，找准节点
				2.flash message %button{class: "close", 'aria-label' => "Close", 'data-dismiss' => "alert"} &times
				3.评论的ajax/create/destroy(节点）
				4.capture获取对象，可以在任何视图使用
				
				2017.4.17

				1.is_a?/kind_of?/instance_of?/区别 instance_of?没有子类
				2.清空评论框的内容，val(''), 删除评论可以查找id
				3. render partial: "xxx", collection: "xxx", :as => :xxx,(collection相当是集合， :as => "变量"
				4.Mysql2::Error - Incorrect string value/rake db:drop/create/migrate

				2017.4.21
				1.爲甚在生產服務器上不能跑定时任务？首先检查sidekiq和redis, 然后就是本地的环境配置是否正确。
				2.查看源码 gem unpack packge
				3.update_all
				4.user_id/category_id赋值  @user.category = @xxx

				2017.4.24
				1.git stage常用命令/list/apply
				2.modal

				2017.4.25
				1.Couldn't find template for digesting(缓存问题)
				2.link_to_function
				3.insert_html

				2017.4.26
				1.Rails::Observers gem
				2.undefind load_paths /ActiveSupport::Dependencies.autoload_paths << "#{RAILS_ROOT}/app/widgets"/ Rails.root(5.0.0)
				3.write rss.builder
				4.pdf-writer/prawn
				5.Rails.root + "file"/.join "file"
				6.make_resourceful(action)

				2017.4.27
				1.ncdu/sudo apt-get remove/clean
				2.docker使用/容器，镜像，仓库

				2017.4.28
				1.use exception_logger gem
				
			    2017.5.2
				1. grape API/mount api下/xxx/xxx
				2.请求路径，api/resource/get
				3.changed?/changes/
                
				2017.5.3
				1.把时间转化成年.year/month/day
				2.浮点数转化成time Time.at(xx)
				3.添加favicon.ico'
				4.%td= time_ago_in_words(quote.created_at) + " ago"

				2017.5.4
				1.ruby detect方法
				2.initalize和new使用
				3.宏的使用attr_reader/writer
				4.has_and_belongs_to_many
				2017.5.5
				1.本地数据库的时间格式CST
				2.使用Time.zone.now查看时区
				3.rails console call helper time_ago_in_words
				4.查看mysql时区 show variables like '%time_zone%';
				5.postgresql show time zone;

				2017.5.8
				1.letter_opener
				2.电商网站(cart_item, order_item/包含商品的id/user/order的id
				3.paperclip裁剪使用#时，paperclip是完全按照指定的大小来切割图片,使用>时，paperclip则是直接将图片按比例缩小

				2017.5.9
				1.undefined local variable or method `ru_captcha'(升级)
				2.Unmet dependencies no packages Unmet dependencies解决方法删除mysql

				Try with

				sudo dpkg -l | grep mysql 
				It will list the packages belonging to the mysql.

				Then try the following command 

				sudo apt-get --purge autoremove mysql*
				sudo apt-get autoclean 
				After that

				sudo rm -r /var/lib/mysql
				sudo rm -r /etc/mysql
				After the above steps try installing mysql again


				2017.5.16
				1.获取用户名
				def display_name
				  self.email.split("@").first
				end

				2. 获取作者名
				def	author_name
				 user.try(:display_name) || "Nobody"

			  3. 删除评论用户
			  	def can_delete_by?(u)
				(self.user == u ) || (u.is_admin?)
				end
			 
			 4. 管理员
			 	def is_admin?
				 self.role == "admin"
				 end
			2017.5.22

			1. fields_for(record_name, record_object = nil, options = {}, &block)
			2. accepts_nested_attributes_for(*attr_names)
			3. uninitialized constant(模型或controller）

			2017.5.22

			1.strip(用于去掉string 中的空格)
			2.tagging/tag/关联
			3. def tag_list
				self.tags.map { |t| t.name }.join(",")
		    4. include_blank: true/汉字
			5.friendly_id
			6.select2-rails(當輸入文字時可以自動搜尋包含輸入文字的標籤。
			當輸入不存在的標籤時，可以在文章儲存時自動新增標籤)
			7. gem "gon"
			8.调用私有方法obj.send(:method [, args...])

			2017.5.23
			1.一个购物车中有多个CartItem, 每个CartItem有product_id, qry so on...(order/orderitem)
			2.faraday gem
			3. freeze冻结常量，不能在赋值，raise: Runtime.error
			4. fetch 获取hash的值h.fetch("a")
			5. to_sym convert ;
			6. "slice" return a containing hash key, hash.slice(key)
			7. data: { disable_with: "...." }


			2017.5.26
			1.public/private/protected区别(private只能(self)隐式调用/protected可以显示调或隐式调用接(self)
			2.include/prepend区别(xxx越往后就越靠前),(include中的module在类前面，prepend中的module在类的后面，左 -> 右)
			3.block可以访问外部的局部变量，block内部的局部变量不能在外部访问
			4. aasm AASM - State machines for Ruby classes 
			5. 定义支付方式(添加payment_method and paid_at to order/ 路由/ controller/ model(update_column)

		   2017.5.27
		   1.rails-emoji 不支持utf8，因为是3个字节，而emoji是四个字节所以转化编码.
		   2.ALTER TABLE `table_name` CONVERT TO CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci, MODIFY column_name TEXT CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci;

		   2017.6.2
		   1.box-shadow:1px 1px 10px 1px #50e6df inset;
		       transition: padding-left 0.2s linear;
		   2.开发环境和生产环境引用图片方式不一样(image-url)

		   2017.6.5
		   1.（[@xxx, Comment.new])/Comment.new, url: ...
		   2. upto

		   2017.6.6
		   1.创建like_xxx,三种方式
		   def find_like_by_user(user)
		   	self.likes,where(user_id: user.id).first
		   end

		  2. 创建订阅号如上

		  3,omniauth-facebook/wechat 获取id/secret

		2017.6.7
		1. 序列化Marshal
		def current_cart
		 +    @cart
		  +  end
		   +
		    +  def setup_cart
			 +    if session[:cart]
			  +      @cart = Marshal::load(session[:cart])
			   +    else
			    +      @cart = Cart.new
				 +    end
				  +
				   +    yield
				    +
					 +    session[:cart] = Marshal::dump(@cart)
					  +  end
		2. delete_if

		2017.6.13
		1.grape-session gem
		2, def session
		    env['rack.session']
		  end
		3. use Rack::Session::Cookie

		4. undefined method `read_attribute_for_serialization' (change serializer to each_serializer)
